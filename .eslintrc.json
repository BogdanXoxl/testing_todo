{
  "extends": ["airbnb-base", "plugin:storybook/recommended", "next/core-web-vitals"],
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "unused-imports", "tailwindcss", "simple-import-sort"],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "no-nested-ternary": "off",
        "no-return-await": "off",
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
        //        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "import/no-mutable-exports": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": [
              "test.{ts,tsx}", // repos with a single test file
              "test-*.{ts,tsx}", // repos with multiple top-level test files
              "**/*{.,_}{test,spec}.{ts,tsx}", // tests where the extension or filename suffix denotes that it is a test
              "**/jest.config.ts", // jest config
              "**/jest.setup.ts", // jest setup
              "**/*.stories.*", // storybook files
              "**/.storybook/**/*.*"
            ],
            "optionalDependencies": false
          }
        ]
      }
    }, // Configuration for testing
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["jest", "jest-formatting", "testing-library", "jest-dom"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react"
      ]
    }
  ],
  "rules": {
    "arrow-parens": "off", // Несовместимо с prettier
    "object-curly-newline": "off", // Несовместимо с prettier
    "no-mixed-operators": "off", // Несовместимо с prettier
    "function-paren-newline": "off", // Несовместимо с prettier
    "space-before-function-paren": 0, // Несовместимо с prettier

    "quotes": [2, "double"],
    "max-len": ["error", 100, 2, { "ignoreUrls": true }], // airbnb позволяет некоторые пограничные случаи
    "no-console": "error", // airbnb использует предупреждение
    "no-alert": "error", // airbnb использует предупреждение

    "react/require-default-props": "off", // airbnb использует уведомление об ошибке
    "react/forbid-prop-types": "off", // airbnb использует уведомление об ошибке
    "react/jsx-filename-extension": [1, { "extensions": [".tsx"] }],
    "react/react-in-jsx-scope": "off",

    "prefer-destructuring": "off",

    "react/no-did-mount-set-state": "off",
    "react/jsx-one-expression-per-line": "off",

    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/label-has-for": [
      2,
      {
        "required": {
          "every": ["id"]
        }
      }
    ], // для ошибки вложенных свойств htmlFor элементов label

    "prettier/prettier": ["error"]
  }
}
